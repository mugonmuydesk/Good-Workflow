name: Build Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
      
      - name: Install LLVM via Chocolatey
        run: |
          choco install llvm --version=18.1.8 -y
          echo "C:\Program Files\LLVM\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
          
      - name: Configure CMake
        run: |
          cmake -B build -S . `
            -DCMAKE_BUILD_TYPE=Release `
            -DLLVM_DIR="C:\Program Files\LLVM\lib\cmake\llvm" `
            -DClang_DIR="C:\Program Files\LLVM\lib\cmake\clang"
            
      - name: Build
        run: cmake --build build --config Release
        
      - name: Package Windows Release
        run: |
          New-Item -ItemType Directory -Force -Path release-windows
          Copy-Item build\bin\Release\codemap.exe release-windows\
          Copy-Item -Recurse frontend release-windows\
          Copy-Item README.md release-windows\
          # Try to find and copy libclang.dll
          if (Test-Path "C:\LLVM\bin\libclang.dll") {
            Copy-Item C:\LLVM\bin\libclang.dll release-windows\
          }
          # Create zip archive
          Compress-Archive -Path release-windows\* -DestinationPath codemap-windows-x64.zip
          
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: codemap-windows-x64
          path: codemap-windows-x64.zip

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libclang-18-dev llvm-18-dev
          
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
        
      - name: Build
        run: cmake --build build -j$(nproc)
        
      - name: Test Build
        run: |
          cd build
          ctest --output-on-failure || true  # Don't fail if no tests configured
          cd ..
          
      - name: Package Linux Release
        run: |
          mkdir -p release-linux/codemap-linux-x64
          cp build/bin/codemap release-linux/codemap-linux-x64/
          cp -r frontend release-linux/codemap-linux-x64/
          cp README.md release-linux/codemap-linux-x64/
          cd release-linux
          tar -czf ../codemap-linux-x64.tar.gz codemap-linux-x64
          cd ..
          
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: codemap-linux-x64
          path: codemap-linux-x64.tar.gz

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: codemap-windows-x64
          
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: codemap-linux-x64
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            codemap-windows-x64.zip
            codemap-linux-x64.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Download
            
            ### Windows
            Download `codemap-windows-x64.zip` and extract. Run `codemap.exe` from the command line.
            
            ### Linux
            Download `codemap-linux-x64.tar.gz` and extract:
            ```bash
            tar -xzf codemap-linux-x64.tar.gz
            cd codemap-linux-x64
            ./codemap --help
            ```
            
            ## What's Changed
            See the auto-generated release notes below for details.